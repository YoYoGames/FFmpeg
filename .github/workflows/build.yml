name: Build

on:
  workflow_dispatch:
  push:
  pull_request:

permissions:
  contents: write  #publish release

jobs:

  build_win_x86:
    strategy:
      fail-fast: false
      matrix:
        build_type: ["Release"]
    runs-on: windows-latest
    name: "x86_64 win ${{ matrix.build_type }}"
    steps:
      - name: Install Dependencies
        run: |
          pip install conan
      - uses: actions/checkout@v4
      - name: Run on architecture
        run: |
          conan profile detect
          conan create conanfile.py --build=missing -r conancenter -s arch=x86_64
          conan install --requires=ffmpeg/6.1 --deployer full_deploy --output-folder out -s arch=x86_64
      - name: Run the script to make the right folder
        run: python3 ${{ github.workspace }}/.github/actions/win/win_build_script.py 
      - uses: actions/upload-artifact@v4
        with:
          name: win_x86
          path: out/windows
          if-no-files-found: error

  build_linux_x86:
    strategy:
      fail-fast: false
      matrix:
        build_type: ["Release"]
    runs-on: ubuntu-latest
    name: "x86_64 linux ${{ matrix.build_type }}"
    steps:
      - name: Install Dependencies
        run: |
          sudo pip install conan
      - uses: actions/checkout@v3
      - name: Run on architecture
        run: |
          conan profile detect
          conan create conanfile.py --build=missing -r conancenter -s arch=x86_64 -c tools.system.package_manager:mode=install -c tools.system.package_manager:sudo=True
          conan install --requires=ffmpeg/6.1 --deployer full_deploy --output-folder out -s arch=x86_64 -c tools.system.package_manager:mode=install -c tools.system.package_manager:sudo=True
      - name: Run the script to make the right folder
        run: python3 ${{ github.workspace }}/.github/actions/linux/linux_build_script.py 
      - uses: actions/upload-artifact@v4
        with:
          name: linux_x86
          path: out/linux
          if-no-files-found: error

  build_mac_x86:
    strategy:
      fail-fast: false
      matrix:
        build_type: [ "Release" ]
    runs-on: macos-latest
    name: "x86_64 macos ${{ matrix.build_type }}"
    steps:
      - name: Install Dependencies
        run: |
          brew install --overwrite python@3.12 cmake conan
      - uses: actions/checkout@v3
      - name: Run on architecture
        run: |
          conan profile detect
          conan create conanfile.py --build=missing -r conancenter -s arch=x86_64
          conan install --requires=ffmpeg/6.1 --deployer full_deploy --output-folder out -s arch=x86_64
      - name: Fixing rpaths
        run: |
          ls
          pushd out/full_deploy/host/ffmpeg/6.1/Release/x86_64/bin
          install_name_tool -add_rpath @executable_path/. ffmpeg
          install_name_tool -add_rpath @executable_path/. ffprobe
          popd
          pushd out
          find . -type f -name '*.dylib' -print0 | xargs -I {} cp {} full_deploy/host/ffmpeg/6.1/Release/x86_64/bin/
          popd
      - name: Run the script to make the right folder
        run: python3 ${{ github.workspace }}/.github/actions/mac/mac_build_script.py 
      - uses: actions/upload-artifact@v4
        with:
          name: mac_x86
          path: out/macos
          if-no-files-found: error

  build_mac_arm64:
    strategy:
      fail-fast: false
      matrix:
        build_type: [ "Release" ]
    runs-on: macos-13-xl
    name: "aarch64 macos ${{ matrix.build_type }}"
    steps:
      - name: Install Dependencies
        run: |
          export HOMEBREW_NO_AUTO_UPDATE=1
          brew install --force --overwrite python@3.11 python@3.12 cmake conan
      - uses: actions/checkout@v4
      - name: Run on architecture
        run: |
          conan profile detect
          conan create conanfile.py --build=missing -r conancenter -s arch=armv8
          conan install --requires=ffmpeg/6.1 --deployer full_deploy --output-folder out -s arch=armv8
      - name: Fixing rpaths
        run: |
          ls
          pushd out/full_deploy/host/ffmpeg/6.1/Release/armv8/bin
          install_name_tool -add_rpath @executable_path/. ffmpeg
          install_name_tool -add_rpath @executable_path/. ffprobe
          popd
          pushd out
          find . -type f -name '*.dylib' -print0 | xargs -I {} cp {} full_deploy/host/ffmpeg/6.1/Release/armv8/bin/
          popd
      - name: Run the script to make the right folder
        run: python3 ${{ github.workspace }}/.github/actions/mac/mac_build_script.py       
      - uses: actions/upload-artifact@v4
        with:
          name: mac_arm64
          path: out/macos
          if-no-files-found: error

  Lipo-x86_64-aarch64-libs:
    runs-on: macos-13-xl
    needs: [ build_mac_x86, build_mac_arm64 ]
    name: "Lipo-x86_64-aarch64-libs" 
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: mac_x86
          path: ffmpeg/macos-x86  
      - uses: actions/download-artifact@v4
        with:
          name: mac_arm64
          path: ffmpeg/macos-arm64    
      - run: sh ./.github/actions/mac/lipo.sh               
      - uses: actions/upload-artifact@v4
        with:
          name: macos
          path: out/macos
          if-no-files-found: error

  vendor_package:
    needs:
      - build_win_x86
      - build_linux_x86
      - build_mac_x86
      - build_mac_arm64
      - Lipo-x86_64-aarch64-libs
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/download-artifact@v4
      with:
        name: macos
        path: ffmpeg/macos    
    - uses: actions/download-artifact@v4
      with:
        name: mac_arm64
        path: ffmpeg/macos-arm64
    - uses: actions/download-artifact@v4
      with:
        name: mac_x86
        path: ffmpeg/macos-x86       
    - uses: actions/download-artifact@v4
      with:
        name: linux_x86
        path: ffmpeg/linux
    - uses: actions/download-artifact@v4
      with:
        name: win_x86
        path: ffmpeg/windows                           
    - uses: actions/upload-artifact@v4
      with:
        name: ffmpeg_vendor_package_all_builds
        path: ffmpeg
        if-no-files-found: error
    - run: 7z a -tzip ffmpeg.zip ffmpeg
    - name: Create Release
      uses: ncipollo/release-action@v1.12.0
      with:
        artifactErrorsFailBuild: true
        artifacts: ffmpeg.zip
        prerelease: false
        replacesArtifacts: true
        tag: FFMPEG-VER-6_1_${{ github.run_number }}-${{ github.run_attempt }}
        allowUpdates: true
